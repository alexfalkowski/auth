# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: auth/v1/service.proto for package 'Auth.V1'

require 'grpc'
require 'auth/v1/service_pb'

module Auth
  module V1
    module Service
      # Service for auth.
      class Service

        include ::GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = 'auth.v1.Service'

        # GeneratePassword for service.
        rpc :GeneratePassword, ::Auth::V1::GeneratePasswordRequest, ::Auth::V1::GeneratePasswordResponse
        # GenerateKey for service.
        rpc :GenerateKey, ::Auth::V1::GenerateKeyRequest, ::Auth::V1::GenerateKeyResponse
        # GetPublicKey for service.
        rpc :GetPublicKey, ::Auth::V1::GetPublicKeyRequest, ::Auth::V1::GetPublicKeyResponse
        # GetJWKSets for service.
        rpc :GetJWKSets, ::Auth::V1::GetJWKSetsRequest, ::Auth::V1::GetJWKSetsResponse
        # GenerateAccessToken for service.
        rpc :GenerateAccessToken, ::Auth::V1::GenerateAccessTokenRequest, ::Auth::V1::GenerateAccessTokenResponse
        # GenerateOAuthToken for service.
        rpc :GenerateOAuthToken, ::Auth::V1::GenerateOAuthTokenRequest, ::Auth::V1::GenerateOAuthTokenResponse
        # GenerateServiceToken for service.
        rpc :GenerateServiceToken, ::Auth::V1::GenerateServiceTokenRequest, ::Auth::V1::GenerateServiceTokenResponse
        # VerifyServiceToken for service.
        rpc :VerifyServiceToken, ::Auth::V1::VerifyServiceTokenRequest, ::Auth::V1::VerifyServiceTokenResponse
      end

      Stub = Service.rpc_stub_class
    end
  end
end
